#!/usr/bin/env php
<?php
/**
 * This file is part of Railt package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
declare(strict_types=1);

define('RAILT_START', microtime(true));

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

if (file_exists($a = __DIR__.'/../../../autoload.php')) {
    require_once $a;
} else {
    require_once __DIR__.'/../vendor/autoload.php';
}

if (!class_exists(Symfony\Component\Console\Application::class)) {
    throw new \RuntimeException('Can not boot a console application: symfony/console (~2.8|3.*|4.*) required');
}

/*
|--------------------------------------------------------------------------
| Run The Railt Console Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$commands = [
    new \Railt\Commands\DevelopmentModeCommand(),
    new \Railt\Commands\DevelopmentServerCommand(),
    new \Railt\Commands\DocsGenerateCommand(),
];

$app = new Symfony\Component\Console\Application();

foreach ($commands as $command) {
    $app->add($command);
}

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Railt has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$status = $app->run(new \Symfony\Component\Console\Input\ArgvInput());

exit($status);
